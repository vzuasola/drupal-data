variables:
    VERSION: "0.1"

stages:
   - tests
   - package
   - deploy-dev
   - deploy-test
   - deploy-staging
   - staging-signoff
   - deploy-internal-production
   - internal-production-signoff
   - deploy-production

execute tests:
  stage: tests
  variables:
     DOCKERFILE: build/Dockerfile.tests
  script:
      - python -u build/tests.py
  artifacts:
    paths:
      - "phpcs*.txt"

create package:
  stage: package
  variables:
     DOCKERFILE: build/Dockerfile.package
  script:
      - python -u build/package.py
  cache:
    paths:
      - vendor/
  artifacts:
    expire_in: 7d
    paths:
      - "*.tar.gz"

dev:
  stage: deploy-dev
  environment:
    name: development
    url: https://rodwin.fix.me
  script:
      - python -u build/deploy.py --environment development --version "$VERSION.${CI_PIPELINE_ID}"
  when: manual
  artifacts:
      paths:
        - build/deployed/*.jsonl

QA:
  stage: deploy-test
  environment:
    name: testing
    url: https://rodwin.fix.me
  script:
      - python -u build/deploy.py --environment testing --version "$VERSION.${CI_PIPELINE_ID}"
  when: manual
  dependencies:
   - dev
  artifacts:
      paths:
        - build/deployed/*.jsonl

staging:
  stage: deploy-staging
  environment:
    name: staging
    url: https://rodwin.fix.me
  script:
      - python -u build/deploy.py --environment staging --version "$VERSION.${CI_PIPELINE_ID}"
  when: manual
  dependencies:
   - QA
  artifacts:
      paths:
        - build/deployed/*.jsonl

uat:
  stage: deploy-staging
  environment:
    name: uat
    url: https://rodwin.fix.me
  script:
      - python -u build/deploy.py --environment uat --version "$VERSION.${CI_PIPELINE_ID}"
  when: manual
  dependencies:
   - QA
  artifacts:
      paths:
        - build/deployed/*.jsonl

staging-signoff:
  stage: staging-signoff
  environment:
    name: staging-signoff
  script:
      - python -u build/signoff.py --environment staging
  when: manual
  dependencies:
   - staging
  artifacts:
      paths:
        - build/deployed/*.jsonl

internal prod:
  stage: deploy-internal-production
  environment:
    name: internal-production
    url: https://rodwin.fix.me
  script:
      - python -u build/deploy.py --environment internal-production --version "$VERSION.${CI_PIPELINE_ID}"
  when: manual
  dependencies:
   - staging-signoff
  artifacts:
      paths:
        - build/deployed/*.jsonl

internal-production-signoff:
  stage: internal-production-signoff
  environment:
    name: internal-production-signoff
  script :
      - python -u build/signoff.py --environment internal-production
  when: manual
  dependencies:
   - staging
  artifacts:
      paths:
        - build/deployed/*.jsonl

production:
  stage: deploy-production
  environment:
    name: production
    url: https://www.dafabet.com/en/sports-df/
  script:
      - python -u build/deploy.py --environment production --version "$VERSION.${CI_PIPELINE_ID}"
  when: manual
  dependencies:
   - internal-production-signoff
  artifacts:
      paths:
        - build/deployed/*.jsonl
