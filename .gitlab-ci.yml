variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - tests
  - package
  - deploy-dev
  - integration-tests-development
  - performance-tests-development
  - security-tests-development
  - deploy-test
  - integration-tests-test
  - performance-tests-test
  - security-tests-test
  - testing-signoff
  - deploy-staging
  - integration-tests-staging
  - performance-tests-staging
  - security-tests-staging
  - staging-signoff
  - deploy-production

before_script:
  - export PACKAGE_VERSION="$CI_COMMIT_REF_NAME.$CI_PIPELINE_ID"
  - export DEPLOY_STATUS_URL="$DEPLOY_URL/lastBuild/api/json"
  - export DEPLOY_RESULT_URL="$DEPLOY_URL/lastBuild/logText/progressiveText?start=0"
  - export GITLAB_EMAIL="$GITLAB_USER_EMAIL"

static code analysis:
  stage: tests
  script:
    - python -u automation/run.py --stage phpunit-sonarqube
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  cache:
    key: v2
    paths:
      - .composer-cache/
      - .sonar-cache/

php code sniffer:
  stage: tests
  script:
    - python -u automation/run.py --stage phpcs
  allow_failure: true

create package:
  stage: package
  script:
    - python -u automation/run.py --stage package
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  when: manual
  cache:
    key: v2
    paths:
      - .composer-cache/
  tags:
    - devrunner

qa1:
  stage: deploy-test
  environment:
    name: testing
  variables:
    env: tst
    STACK: dafa-stack
  script:
    - export DEPLOY_TOKEN DEPLOY_URL
    - bash automation/jenkins_deploy.sh
  when: manual
  dependencies:
    - create package
  tags:
    - ipvg-stg-02

qa1-mobile-stack:
  stage: deploy-test
  environment:
    name: testing
  variables:
    env: tst
    STACK: mobile-dafa-stack
  script:
    - export DEPLOY_TOKEN DEPLOY_URL
    - bash automation/jenkins_deploy.sh
  when: manual
  dependencies:
    - create package
  tags:
    - ipvg-stg-02

qa1-japan-stack:
  stage: deploy-test
  environment:
    name: testing
  script:
    - DEPLOY_QA=$DEPLOY_QA_JAPAN python -u automation/run.py --stage deploy-testing
  when: manual
  dependencies:
    - create package
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month

.selenium tests qa1:
  stage: integration-tests-test
  script:
    - python -u automation/run.py --stage integration-tests-test
  when: manual
  dependencies:
    - qa1
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month

.hp fortify scan qa1:
  stage: security-tests-test
  script:
    - python -u automation/run.py --stage code-scan-testing
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  allow_failure: true
  when: manual

.jmeter qa1:
  stage: performance-tests-test
  script:
    - python -u automation/run.py --stage performance-tests-test
  when: manual
  dependencies:
    - qa1
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  tags:
    - jmeter

tct:
  stage: deploy-test
  environment:
    name: tct
  variables:
    env: tct
    STACK: dafa-stack
  script:
    - export DEPLOY_TOKEN DEPLOY_URL
    - bash automation/jenkins_deploy.sh
  when: manual
  dependencies:
    - create package
  tags:
    - ipvg-stg-02

tct-mobile-stack:
  stage: deploy-test
  environment:
    name: tct
  variables:
    env: tct
    STACK: mobile-dafa-stack
  script:
    - export DEPLOY_TOKEN DEPLOY_URL
    - bash automation/jenkins_deploy.sh
  when: manual
  dependencies:
    - create package
  tags:
    - ipvg-stg-02

tct-japan-stack:
  stage: deploy-test
  environment:
    name: tct
  script:
    - DEPLOY_TCT=$DEPLOY_TCT_JAPAN
    - DEPLOY_TCT_TOWER_HOST=$DEPLOY_TCT_O_TOWER_HOST
    - python -u automation/run.py --stage deploy-tct
  when: manual
  dependencies:
    - create package
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  tags:
    - ipvg-stg-02

tct-row-stack:
  stage: deploy-test
  environment:
    name: tct
  variables:
    env: tct
    STACK: row-stack
  script:
    - export DEPLOY_TOKEN DEPLOY_URL
    - bash automation/jenkins_deploy.sh
  when: manual
  dependencies:
    - create package
  tags:
    - ipvg-stg-02

tct-nextbet-stack:
  stage: deploy-test
  environment:
    name: tct
  variables:
    env: tct
    STACK: row-stack
  script:
    - export DEPLOY_TOKEN DEPLOY_URL
    - bash automation/jenkins_deploy.sh
  when: manual
  dependencies:
    - create package
  tags:
    - ipvg-stg-02

tct-nextbet-mobile-stack:
  stage: deploy-test
  environment:
    name: tct
  variables:
    env: tct
    STACK: row-stack
  script:
    - export DEPLOY_TOKEN DEPLOY_URL
    - bash automation/jenkins_deploy.sh
  when: manual
  dependencies:
    - create package
  tags:
    - ipvg-stg-02

tct_o:
  stage: deploy-test
  environment:
    name: tct
  script:
    - DEPLOY_TCT=$DEPLOY_TCT_O
    - DEPLOY_TCT_TOWER_HOST=$DEPLOY_TCT_O_TOWER_HOST
    - python -u automation/run.py --stage deploy-tct
  when: manual
  dependencies:
    - create package
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  tags:
    - stgrunner_ipvg

tct_o-mobile-stack:
  stage: deploy-test
  environment:
    name: tct
  script:
    - DEPLOY_TCT=$DEPLOY_TCT_O_MOBILE
    - DEPLOY_TCT_TOWER_HOST=$DEPLOY_TCT_O_TOWER_HOST
    - python -u automation/run.py --stage deploy-tct
  when: manual
  dependencies:
    - create package
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  tags:
    - stgrunner_ipvg

tct_o-row-stack:
  stage: deploy-test
  environment:
    name: tct
  script:
    - DEPLOY_TCT=$DEPLOY_TCT_O_ROW
    - DEPLOY_TCT_TOWER_HOST=$DEPLOY_TCT_O_TOWER_HOST
    - python -u automation/run.py --stage deploy-tct
  when: manual
  dependencies:
    - create package
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  tags:
    - stgrunner_ipvg

.selenium tests tct:
  stage: integration-tests-test
  script:
    - python -u automation/run.py --stage integration-tests-tct
  when: manual
  dependencies:
    - tct
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month

.jmeter tct:
  stage: performance-tests-test
  script:
    - python -u automation/run.py --stage performance-tests-tct
  when: manual
  dependencies:
    - tct
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  tags:
    - jmeter

testing signoff:
  stage: testing-signoff
  script:
    - python -u automation/run.py --stage testing-signoff
  when: manual
  dependencies:
    - qa1
    - tct
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  only:
    - /^release-.*$/
    - tags

uat:
  stage: deploy-staging
  environment:
    name: uat
  variables:
    env: uat
    STACK: dafa-stack
  script:
    - export DEPLOY_TOKEN DEPLOY_URL
    - bash automation/jenkins_deploy.sh
  when: manual
  dependencies:
    - testing signoff
  tags:
    - ipvg-stg-02

uat-mobile-stack:
  stage: deploy-staging
  environment:
    name: uat
  variables:
    env: uat
    STACK: mobile-dafa-stack
  script:
    - export DEPLOY_TOKEN DEPLOY_URL
    - bash automation/jenkins_deploy.sh
  when: manual
  dependencies:
    - testing signoff
  tags:
    - ipvg-stg-02

uat-japan-stack:
  stage: deploy-staging
  environment:
    name: uat
  script:
    - DEPLOY_UAT=$DEPLOY_UAT_JAPAN python -u automation/run.py --stage deploy-uat
  when: manual
  dependencies:
    - testing signoff
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  only:
    - /^release-.*$/
    - tags

uat-row-stack:
  stage: deploy-staging
  environment:
    name: uat
  variables:
    env: uat
    STACK: row-stack
  script:
    - export DEPLOY_TOKEN DEPLOY_URL
    - bash automation/jenkins_deploy.sh
  when: manual
  dependencies:
    - testing signoff
  tags:
    - ipvg-stg-02

.selenium tests uat:
  stage: integration-tests-staging
  script:
    - python -u automation/run.py --stage integration-tests-uat
  when: manual
  dependencies:
    - uat
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  only:
    - /^release-.*$/
    - tags

.jmeter uat:
  stage: performance-tests-staging
  script:
    - python -u automation/run.py --stage performance-tests-uat
  when: manual
  dependencies:
    - uat
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  only:
    - /^release-.*$/
    - tags
  tags:
    - jmeter

staging:
  stage: deploy-staging
  environment:
    name: staging
  variables:
    env: stg
    STACK: dafa-stack
  script:
    - export DEPLOY_TOKEN DEPLOY_URL
    - bash automation/jenkins_deploy.sh
  when: manual
  dependencies:
    - testing signoff
  tags:
    - ipvg-stg-02

staging-mobile-stack:
  stage: deploy-staging
  environment:
    name: staging
  variables:
    env: stg
    STACK: mobile-dafa-stack
  script:
    - export DEPLOY_TOKEN DEPLOY_URL
    - bash automation/jenkins_deploy.sh
  when: manual
  dependencies:
    - testing signoff
  tags:
    - ipvg-stg-02

staging-japan-stack:
  stage: deploy-staging
  environment:
    name: staging
  script:
    - DEPLOY_STG=$DEPLOY_STG_JAPAN python -u automation/run.py --stage deploy-staging
  when: manual
  dependencies:
    - testing signoff
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  only:
    - /^release-.*$/
    - tags
  tags:
    - stgrunner

staging-row-stack:
  stage: deploy-staging
  environment:
    name: staging
  variables:
    env: stg
    STACK: row-stack
  script:
    - export DEPLOY_TOKEN DEPLOY_URL
    - bash automation/jenkins_deploy.sh
  when: manual
  dependencies:
    - testing signoff
  tags:
    - ipvg-stg-02

staging_o:
  stage: deploy-staging
  environment:
    name: staging
  script:
    - DEPLOY_STG=$DEPLOY_STG_O
    - DEPLOY_STG_TOWER_HOST=$DEPLOY_STG_O_TOWER_HOST
    - python -u automation/run.py --stage deploy-staging
  when: manual
  dependencies:
    - testing signoff
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  only:
    - /^release-.*$/
    - tags
  tags:
    - stgrunner_ipvg

staging_o-mobile-stack:
  stage: deploy-staging
  environment:
    name: staging
  script:
    - DEPLOY_STG=$DEPLOY_STG_O_MOBILE
    - DEPLOY_STG_TOWER_HOST=$DEPLOY_STG_O_TOWER_HOST
    - python -u automation/run.py --stage deploy-staging
  when: manual
  dependencies:
    - testing signoff
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  only:
    - /^release-.*$/
    - tags
  tags:
    - stgrunner_ipvg

.selenium tests staging:
  stage: integration-tests-staging
  script:
    - python -u automation/run.py --stage integration-tests-stg
  when: manual
  dependencies:
    - staging
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  only:
    - /^release-.*$/
    - tags

.jmeter staging:
  stage: performance-tests-staging
  script:
    - python -u automation/run.py --stage performance-tests-staging
  when: manual
  dependencies:
    - staging
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  only:
    - /^release-.*$/
    - tags
  tags:
    - jmeter

.acunetix staging:
  stage: security-tests-staging
  script:
    - python -u automation/run.py --stage acunetix-scan
  when: manual
  dependencies:
    - staging
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  only:
    - /^release-.*$/
    - tags

staging signoff:
  stage: staging-signoff
  script:
    - python -u automation/run.py --stage staging-signoff
  when: manual
  dependencies:
    - staging
    - staging-mobile-stack
    - staging-japan-stack
    - staging-row-stack
    - uat
    - uat-mobile-stack
    - uat-japan-stack
    - uat-row-stack
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  only:
    - /^release-.*$/
    - tags

production:
  stage: deploy-production
  environment:
    name: production
  script:
    - python -u automation/run.py --stage deploy-production
  when: manual
  dependencies:
   - staging
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  only:
    - /^release-.*$/
    - tags

production-mobile-stack:
  stage: deploy-production
  environment:
    name: production
  script:
    - DEPLOY_PROD=$DEPLOY_PROD_MOBILE python -u automation/run.py --stage deploy-production
  when: manual
  dependencies:
   - staging
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  only:
    - /^release-.*$/
    - tags

production-japan-stack:
  stage: deploy-production
  environment:
    name: production
  script:
    - DEPLOY_PROD=$DEPLOY_PROD_JAPAN python -u automation/run.py --stage deploy-production
  when: manual
  dependencies:
   - staging signoff
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  only:
    - /^release-.*$/
    - tags

production-row-stack:
  stage: deploy-production
  environment:
    name: production
  script:
    - DEPLOY_PROD=$DEPLOY_PROD_ROW python -u automation/run.py --stage deploy-production
  when: manual
  dependencies:
   - staging signoff
  artifacts:
    paths:
      - automation/deployed/*.jsonl
    expire_in: 1 month
  only:
    - /^release-.*$/
    - tags
