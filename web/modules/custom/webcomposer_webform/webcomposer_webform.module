<?php

/**
 * @file
 * Contains webcomposer_webform.module.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function webcomposer_webform_form_webform_ui_element_form_alter(&$form, FormStateInterface $form_state) {
  if (!isset($form['properties']['validation'])) {
    return;
  }

  // Define default custom properties.
  $default_custom_properties = [
    'required_error' => 'This field is required',
    'alphanumeric' => FALSE,
    'alphanumeric_error' => 'Input should be alphanumeric',
    'unicode' => FALSE,
    'unicode_error' => 'Input should be unicode',
    'email' => FALSE,
    'email_error' => 'Input should be a valid email',
    'numeric' => FALSE,
    'numeric_error' => 'Input should be numeric',
    'numeric_symbols' => FALSE,
    'numeric_symbols_error' => 'Input should be numeric',
    'min_length' => FALSE,
    'min_length_value' => 5,
    'min_length_error' => 'Min length requirement not met',
    'max_length' => FALSE,
    'max_length_value' => 15,
    'max_length_error' => 'Max length exceeded',
  ];

  // Append the $default_custom_properties to $default_properties stored in the 
  // webform's state. This allows default custom properties to be removed when the 
  // webform is submitted. If this is omitted, custom properties will always 
  // be append to the element's properties. 
  // @see \Drupal\webform\Plugin\WebformElementBase::getConfigurationFormProperties 
  // $form_state->set( 
  //   'default_properties', 
  //   $form_state->get('default_properties') + $default_custom_properties 
  // );

  // Retrieve the values from the custom properties element's default value.
  // @see \Drupal\webform\Plugin\WebformElementBase::buildConfigurationForm
  $custom_properties = $form['properties']['custom']['properties']['#default_value'];

  // Make sure to unset the custom properties which are going to be handled via
  // the below webform elements.
  $form['properties']['custom']['properties']['#default_value'] = array_diff_key(
    $custom_properties,
    $default_custom_properties
  );

  // Finally, append the default custom property values.
  $custom_properties += $default_custom_properties;

  // Hide all fields except these
  $exclude = ['required', 'required_error'];

  foreach ($form['properties']['validation'] as $key => $value) {
    if (!in_array($key, $exclude) && is_array($value)) {
      $form['properties']['validation'][$key]['#access'] = FALSE;
    }
  }

  $form['properties']['validation']['#weight'] = -5;
  $form['properties']['validation']['required_error']['#description'] = t('The error message for the required validation');

  $form['properties']['validation']['alphanumeric'] = [
    '#type' => 'checkbox',
    '#title' => t('Alphanumeric'),
    '#description' => t('Make this field alphanumeric'),
    '#parents' => ['properties', 'alphanumeric'],
    '#default_value' => $custom_properties['alphanumeric'],
  ];

  $form['properties']['validation']['alphanumeric_error'] = [
    '#type' => 'textfield',
    '#title' => t('Alphanumeric error message'),
    '#description' => t('The error message for the alphanumeric validation'),
    '#parents' => ['properties', 'alphanumeric_error'],
    '#default_value' => $custom_properties['alphanumeric_error'],
    '#states' => [
      'visible' => [
        ':input[name="properties[alphanumeric]"]' => ['checked' => TRUE],
      ],
    ],
  ];

  $form['properties']['validation']['unicode'] = [
    '#type' => 'checkbox',
    '#title' => t('Unicode'),
    '#description' => t('Make this field accept alphanumeric + spaces + foreign characters'),
    '#parents' => ['properties', 'unicode'],
    '#default_value' => $custom_properties['unicode'],
  ];

  $form['properties']['validation']['unicode_error'] = [
    '#type' => 'textfield',
    '#title' => t('Unicode error message'),
    '#description' => t('The error message for the unicode validation'),
    '#parents' => ['properties', 'unicode_error'],
    '#default_value' => $custom_properties['unicode_error'],
    '#states' => [
      'visible' => [
        ':input[name="properties[unicode]"]' => ['checked' => TRUE],
      ],
    ],
  ];

  $form['properties']['validation']['email'] = [
    '#type' => 'checkbox',
    '#title' => t('Email'),
    '#description' => t('Make this field email'),
    '#parents' => ['properties', 'email'],
    '#default_value' => $custom_properties['email'],
  ];

  $form['properties']['validation']['email_error'] = [
    '#type' => 'textfield',
    '#title' => t('Email error message'),
    '#description' => t('The error message for the email validation'),
    '#parents' => ['properties', 'email_error'],
    '#default_value' => $custom_properties['email_error'],
    '#states' => [
      'visible' => [
        ':input[name="properties[email]"]' => ['checked' => TRUE],
      ],
    ],
  ];

  $form['properties']['validation']['numeric'] = [
    '#type' => 'checkbox',
    '#title' => t('Numeric'),
    '#description' => t('Make this field numeric'),
    '#parents' => ['properties', 'numeric'],
    '#default_value' => $custom_properties['numeric'],
  ];

  $form['properties']['validation']['numeric_error'] = [
    '#type' => 'textfield',
    '#title' => t('Numeric error message'),
    '#description' => t('The error message for the numeric validation'),
    '#parents' => ['properties', 'numeric_error'],
    '#default_value' => $custom_properties['numeric_error'],
    '#states' => [
      'visible' => [
        ':input[name="properties[numeric]"]' => ['checked' => TRUE],
      ],
    ],
  ];

  $form['properties']['validation']['numeric_symbols'] = [
    '#type' => 'checkbox',
    '#title' => t('Numeric with Symbols'),
    '#description' => t('Make this field numeric with symbols'),
    '#parents' => ['properties', 'numeric_symbols'],
    '#default_value' => $custom_properties['numeric_symbols'],
  ];

  $form['properties']['validation']['numeric_symbols_error'] = [
    '#type' => 'textfield',
    '#title' => t('Numeric with Symbols error message'),
    '#description' => t('The error message for the numeric symbols validation'),
    '#parents' => ['properties', 'numeric_symbols_error'],
    '#default_value' => $custom_properties['numeric_symbols_error'],
    '#states' => [
      'visible' => [
        ':input[name="properties[numeric_symbols]"]' => ['checked' => TRUE],
      ],
    ],
  ];

  $form['properties']['validation']['min_length'] = [
    '#type' => 'checkbox',
    '#title' => t('Minimum Length'),
    '#description' => t('Specify a minimum value length'),
    '#parents' => ['properties', 'min_length'],
    '#default_value' => $custom_properties['min_length'],
  ];

  $form['properties']['validation']['min_length_value'] = [
    '#type' => 'number',
    '#title' => t('Minimum length value'),
    '#description' => t('The validation value'),
    '#parents' => ['properties', 'min_length_value'],
    '#default_value' => $custom_properties['min_length_value'],
    '#states' => [
      'visible' => [
        ':input[name="properties[min_length]"]' => ['checked' => TRUE],
      ],
    ],
  ];

  $form['properties']['validation']['min_length_error'] = [
    '#type' => 'textfield',
    '#title' => t('Minimum length error message'),
    '#description' => t('The error message for the numeric symbols validation'),
    '#parents' => ['properties', 'min_length_error'],
    '#default_value' => $custom_properties['min_length_error'],
    '#states' => [
      'visible' => [
        ':input[name="properties[min_length]"]' => ['checked' => TRUE],
      ],
    ],
  ];

  $form['properties']['validation']['max_length'] = [
    '#type' => 'checkbox',
    '#title' => t('Maximum Length'),
    '#description' => t('Specify a maximum value length'),
    '#parents' => ['properties', 'max_length'],
    '#default_value' => $custom_properties['max_length'],
  ];

  $form['properties']['validation']['max_length_value'] = [
    '#type' => 'number',
    '#title' => t('Maximum length value'),
    '#description' => t('The validation value'),
    '#parents' => ['properties', 'max_length_value'],
    '#default_value' => $custom_properties['max_length_value'],
    '#states' => [
      'visible' => [
        ':input[name="properties[max_length]"]' => ['checked' => TRUE],
      ],
    ],
  ];

  $form['properties']['validation']['max_length_error'] = [
    '#type' => 'textfield',
    '#title' => t('Maximum length error message'),
    '#description' => t('The error message for the numeric symbols validation'),
    '#parents' => ['properties', 'max_length_error'],
    '#default_value' => $custom_properties['max_length_error'],
    '#states' => [
      'visible' => [
        ':input[name="properties[max_length]"]' => ['checked' => TRUE],
      ],
    ],
  ];
}

/**
 * Perform alterations on webform third party settings form.
 */
function webcomposer_webform_webform_third_party_settings_form_alter(array &$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $settings = $form_state->getFormObject()->getEntity();

  // put the form side by side
  $form['general_settings']['#weight'] = -10;
  $form['third_party_settings']['#weight'] = -5;

  $form['third_party_settings']['webcomposer_webform'] = [
    '#type' => 'details',
    '#title' => t('Layout Settings'),
    '#collapsed' => FALSE,
  ];

  $form['third_party_settings']['webform_background'] = [
    '#type' => 'details',
    '#title' => t('Background Settings'),
    '#open' => FALSE,
  ];

  $form['third_party_settings']['webform_background']['background_image_en'] = [
    '#type' => 'webform_image_file',
    '#title' => t('Form Background Image EN'),
    '#description' => t('The background image of the form'),
    '#default_value' => $settings->getThirdPartySetting('webform_background', 'background_image_en'),
    '#upload_location' => 'public://webform-backgrounds',
  ];

  $form['third_party_settings']['webform_background']['background_image_sc'] = [
    '#type' => 'webform_image_file',
    '#title' => t('Form Background Image SC'),
    '#description' => t('The background image of the form'),
    '#default_value' => $settings->getThirdPartySetting('webform_background', 'background_image_sc'),
    '#upload_location' => 'public://webform-backgrounds',
  ];

  $form['third_party_settings']['webform_background']['background_image_ch'] = [
    '#type' => 'webform_image_file',
    '#title' => t('Form Background Image CH'),
    '#description' => t('The background image of the form'),
    '#default_value' => $settings->getThirdPartySetting('webform_background', 'background_image_ch'),
    '#upload_location' => 'public://webform-backgrounds',
  ];

  $form['third_party_settings']['webform_background']['background_image_eu'] = [
    '#type' => 'webform_image_file',
    '#title' => t('Form Background Image EU'),
    '#description' => t('The background image of the form'),
    '#default_value' => $settings->getThirdPartySetting('webform_background', 'background_image_eu'),
    '#upload_location' => 'public://webform-backgrounds',
  ];

  $form['third_party_settings']['webform_background']['background_image_th'] = [
    '#type' => 'webform_image_file',
    '#title' => t('Form Background Image TH'),
    '#description' => t('The background image of the form'),
    '#default_value' => $settings->getThirdPartySetting('webform_background', 'background_image_th'),
    '#upload_location' => 'public://webform-backgrounds',
  ];

  $form['third_party_settings']['webform_background']['background_image_vn'] = [
    '#type' => 'webform_image_file',
    '#title' => t('Form Background Image VN'),
    '#description' => t('The background image of the form'),
    '#default_value' => $settings->getThirdPartySetting('webform_background', 'background_image_vn'),
    '#upload_location' => 'public://webform-backgrounds',
  ];

  $form['third_party_settings']['webform_background']['background_image_in'] = [
    '#type' => 'webform_image_file',
    '#title' => t('Form Background Image IN'),
    '#description' => t('The background image of the form'),
    '#default_value' => $settings->getThirdPartySetting('webform_background', 'background_image_in'),
    '#upload_location' => 'public://webform-backgrounds',
  ];

  $form['third_party_settings']['webform_background']['background_image_jp'] = [
    '#type' => 'webform_image_file',
    '#title' => t('Form Background Image JP'),
    '#description' => t('The background image of the form'),
    '#default_value' => $settings->getThirdPartySetting('webform_background', 'background_image_jp'),
    '#upload_location' => 'public://webform-backgrounds',
  ];

  $form['third_party_settings']['webform_background']['background_image_kr'] = [
    '#type' => 'webform_image_file',
    '#title' => t('Form Background Image KR'),
    '#description' => t('The background image of the form'),
    '#default_value' => $settings->getThirdPartySetting('webform_background', 'background_image_kr'),
    '#upload_location' => 'public://webform-backgrounds',
  ];

  $form['third_party_settings']['webform_background']['background_image_id'] = [
    '#type' => 'webform_image_file',
    '#title' => t('Form Background Image ID'),
    '#description' => t('The background image of the form'),
    '#default_value' => $settings->getThirdPartySetting('webform_background', 'background_image_id'),
    '#upload_location' => 'public://webform-backgrounds',
  ];

  $form['third_party_settings']['webform_background']['background_image_gr'] = [
    '#type' => 'webform_image_file',
    '#title' => t('Form Background Image GR'),
    '#description' => t('The background image of the form'),
    '#default_value' => $settings->getThirdPartySetting('webform_background', 'background_image_gr'),
    '#upload_location' => 'public://webform-backgrounds',
  ];

  $form['third_party_settings']['webform_background']['background_image_pl'] = [
    '#type' => 'webform_image_file',
    '#title' => t('Form Background Image PL'),
    '#description' => t('The background image of the form'),
    '#default_value' => $settings->getThirdPartySetting('webform_background', 'background_image_pl'),
    '#upload_location' => 'public://webform-backgrounds',
  ];

  $form['third_party_settings']['webcomposer_webform']['error_font_color'] = [
    '#type' => 'color',
    '#title' => t('Error Font Color'),
    '#description' => t('The color of the error labels'),
    '#default_value' => $settings->getThirdPartySetting('webcomposer_webform', 'error_font_color'),

  ];

  $form['third_party_settings']['webcomposer_webform']['label_font_color'] = [
    '#type' => 'color',
    '#title' => t('Label Font Color'),
    '#description' => t('The color of the field labels'),
    '#default_value' => $settings->getThirdPartySetting('label_font_color', 'error_font_color'),
  ];

  $form['#validate'][] = '_webcomposer_webform_webform_form_validate';
}

/**
 * Validate function
 */
function _webcomposer_webform_webform_form_validate(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $settings = $form_state->getFormObject()->getEntity();

  // fix for image uploads breaking due to unknown reasons that the scheduled date
  // gets validated on image upload AJAX calls
  $date = $settings->get('open')['date'];
  if (!$date) {
    $settings->set('open', FALSE);
  }

  $date = $settings->get('close')['date'];
  if (!$date) {
    $settings->set('close', FALSE);
  }

  // remove the background image upload on empty background
  $third_party_settings = $form_state->getValue('third_party_settings');

  if (empty($third_party_settings['webform_background']['background_image_en'])) {
    unset($third_party_settings['webform_background']['background_image_en']);
  }
  if (empty($third_party_settings['webform_background']['background_image_sc'])) {
    unset($third_party_settings['webform_background']['background_image_sc']);
  }
  if (empty($third_party_settings['webform_background']['background_image_ch'])) {
    unset($third_party_settings['webform_background']['background_image_ch']);
  }
  if (empty($third_party_settings['webform_background']['background_image_eu'])) {
    unset($third_party_settings['webform_background']['background_image_eu']);
  }
  if (empty($third_party_settings['webform_background']['background_image_th'])) {
    unset($third_party_settings['webform_background']['background_image_th']);
  }
  if (empty($third_party_settings['webform_background']['background_image_vn'])) {
    unset($third_party_settings['webform_background']['background_image_vn']);
  }
  if (empty($third_party_settings['webform_background']['background_image_in'])) {
    unset($third_party_settings['webform_background']['background_image_in']);
  }
  if (empty($third_party_settings['webform_background']['background_image_jp'])) {
    unset($third_party_settings['webform_background']['background_image_jp']);
  }
  if (empty($third_party_settings['webform_background']['background_image_kr'])) {
    unset($third_party_settings['webform_background']['background_image_kr']);
  }
  if (empty($third_party_settings['webform_background']['background_image_id'])) {
    unset($third_party_settings['webform_background']['background_image_id']);
  }
  if (empty($third_party_settings['webform_background']['background_image_gr'])) {
    unset($third_party_settings['webform_background']['background_image_gr']);
  }
  if (empty($third_party_settings['webform_background']['background_image_pl'])) {
    unset($third_party_settings['webform_background']['background_image_pl']);
  }

  $form_state->setValue('third_party_settings', $third_party_settings);
}

