<?php

/**
 * @file
 * Contains webcomposer_audit.module.
 */

use Drupal\Core\Entity\EntityInterface;

/**
 * Entity Hooks
 *
 */

/**
 *
 */
function webcomposer_audit_entity_update(EntityInterface $entity) {
  if (!webcomposer_audit_entity_is_valid()) {
    return;
  }

  try {
    \Drupal::service('webcomposer_audit.database_storage')->update($entity);
  } catch (\Exception $e) {
    // do nothing
  }
}

/**
 *
 */
function webcomposer_audit_entity_insert(EntityInterface $entity) {
  if (!webcomposer_audit_entity_is_valid()) {
    return;
  }

  try {
    \Drupal::service('webcomposer_audit.database_storage')->insert($entity);
  } catch (\Exception $e) {
    // do nothing
  }
}

/**
 *
 */
function webcomposer_audit_entity_delete(EntityInterface $entity) {
  if (!webcomposer_audit_entity_is_valid()) {
    return;
  }

  try {
    \Drupal::service('webcomposer_audit.database_storage')->delete($entity);
  } catch (\Exception $e) {
    // do nothing
  }
}

/**
 * Flag to check if request is valid
 */
function webcomposer_audit_entity_is_valid() {
  if (defined('MAINTENANCE_MODE') || defined('AUDIT_LOG_EXCLUDE_REQUEST')) {
    return false;
  }

  return true;
}

/**
 * Config Hooks
 *
 */

/**
 *
 */
function webcomposer_audit_webcomposer_config_schema_insert($name, $data) {
  $entity = new \Drupal\webcomposer_audit\Entity\RawEntity($name, $data);

  try {
    \Drupal::service('webcomposer_audit.database_storage')->insert($entity);
  } catch (\Exception $e) {
    // do nothing
  }
}

/**
 *
 */
function webcomposer_audit_webcomposer_config_schema_update($name, $data, $before) {
  $entity = new \Drupal\webcomposer_audit\Entity\RawEntity($name, $data);
  $entity->setOriginal(new \Drupal\webcomposer_audit\Entity\RawEntity($name, $before));

  try {
    \Drupal::service('webcomposer_audit.database_storage')->update($entity);
  } catch (\Exception $e) {
    // do nothing
  }
}

/**
 *
 */
function webcomposer_audit_webcomposer_config_schema_translate($name, $data, $before) {
  $entity = new \Drupal\webcomposer_audit\Entity\RawEntity($name, $data);
  $entity->setOriginal(new \Drupal\webcomposer_audit\Entity\RawEntity($name, $before));

  try {
    \Drupal::service('webcomposer_audit.database_storage')->update($entity);
  } catch (\Exception $e) {
    // do nothing
  }
}

/**
 *
 */
function webcomposer_audit_webcomposer_form_config_schema_update($name, $data, $before)
{
  $entity = new \Drupal\webcomposer_audit\Entity\RawFormEntity($name, $data);
  $before = $before ?? [];
  $entity->setOriginal(new \Drupal\webcomposer_audit\Entity\RawFormEntity($name, $before));

  try {
    \Drupal::service('webcomposer_audit.database_storage')->update($entity);
  } catch (\Exception $e) {
    // do nothing
  }
}

/**
 *
 */
function webcomposer_audit_webcomposer_cache_signature_update($name, $newsignature, $oldsignature)
{
  $entity = new \Drupal\webcomposer_audit\Entity\RawFormEntity($name, $newsignature);
  $before = $before ?? [];
  $entity->setOriginal(new \Drupal\webcomposer_audit\Entity\RawFormEntity($name, $oldsignature));

  try {
    \Drupal::service('webcomposer_audit.database_storage')->update($entity);
  } catch (\Exception $e) {
    // do nothing
  }
}
