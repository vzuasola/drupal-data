<?php

/**
 * @file
 * Contains webcomposer_dashboard.module.
 */

use Drupal\Core\Url;
use DrupalProject\custom\EnvironmentResolver;
use Drupal\webcomposer_dashboard\Toolbar\ToolbarHandler;

/**
 * Implements hook_toolbar().
 */
function webcomposer_dashboard_toolbar() {
  $items['webcomposer'] = [
    '#type' => 'toolbar_item',
    'tab' => [
      '#type' => 'link',
      '#title' => t('Webcomposer'),
      '#url' => Url::fromRoute('webcomposer.admin'),
      '#attributes' => [
        'title' => t('Webcomposer'),
        'class' => ['toolbar-icon', 'toolbar-icon-webcomposer'],
      ],
    ],
    'tray' => [
      '#heading' => t('Webcomposer menu'),
      'webcomposer' => [
        '#theme' => 'item_list',
        '#items' => [
          'webcomposer.admin' => [
            '#type' => 'link',
            '#title' => t('Configuration'),
            '#url' => Url::fromRoute('webcomposer.admin'),
          ],
          'webcomposer_dashboard.clear_cache' => [
            '#lazy_builder' => [ToolbarHandler::class . ':generateToolbar', []],
            '#create_placeholder' => TRUE,
          ],
        ],
        '#attributes' => [
          'class' => ['clearfix', 'menu', 'toolbar-items-webcomposer'],
        ],
      ],
    ],
    '#attached' => [
      'library' => [
        'webcomposer_dashboard/webcomposer.toolbar',
      ],
    ],
    '#weight' => 900,
  ];

  return $items;
}

function webcomposer_dashboard_page_top(&$page) {
  $env = EnvironmentResolver::getEnvironment();

  if ($env === 'PRD') {
    $message = "You are editing <strong>PRODUCTION</strong> environment";

    $page['webcomposer_warning'] = [
      '#markup' => "
        <div class='webcomposer-status-message'>
          $message
        </div>
      ",
    ];
  }
}

function webcomposer_dashboard_entity_operation_alter(array &$operations, \Drupal\Core\Entity\EntityInterface $entity) {
  $langMgr = \Drupal::languageManager();
  $lang = $langMgr->getLanguage($langMgr->getCurrentLanguage()->getId());

  // for each operation link, language should be the same as the current language
  foreach ($operations as $key => $value) {
    $value['url']->setOption('language', $lang);
  }
}
