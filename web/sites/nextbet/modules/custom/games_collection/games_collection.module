<?php

use Drupal\field\Entity\FieldStorageConfig;

/**
 * @file
 * Contains games_collection.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\EntityFormInterface;

/**
 * Implements hook_help().
 */
function games_collection_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the games_collection module.
    case 'help.page.games_collection':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Providers configuration to group the games.') . '</p>';
      return $output;

    default:
  }
}

function games_collection_form_alter(&$form, $form_state, $form_id) {
  switch ($form_id) {
    case 'node_game_delete_form':
    case 'node_arcade_game_delete_form':
        checkCollectionReferences($form);
        break;
  }
}

function checkCollectionReferences(&$form) {
  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node instanceof \Drupal\node\NodeInterface) {
      $nid = $node->id();
      $nids = [];
      $products = \Drupal::entityManager()->getStorage('taxonomy_term')->loadTree('product');
      $product_names = [];

      foreach ($products as $product) {
        $product_names[] = $product->name;
      }

      $query = \Drupal::entityQuery('games_collection');

      if (! empty($product_names)) {
        $group = $query->orConditionGroup();

        foreach ($product_names as $product_name) {
          $field_name = "field_games_{$product_name}";
          $field_storage = FieldStorageConfig::loadByName('games_collection', $field_name);
  
          if (! empty($field_storage)) {
            $group = $group->condition($field_name, $nid, 'IN');
          }
        }
      }

      if (isset($group)) {
          $nids = $query->condition($group)->execute();
      }

      $entities = \Drupal::entityManager()->getStorage('games_collection')->loadMultiple($nids);

      if ($entities) {
        $links = [];

        foreach ($entities as $entity) {
            $url = \Drupal\Core\Url::fromRoute('entity.games_collection.edit_form', ['games_collection' => $entity->id->value]);
            $url->setOptions(['attributes' => ['target' => '_blank']]);
            $link = \Drupal\Core\Link::fromTextAndUrl($entity->name->value, $url);
            $links[] = $link->toString();
        }

        $renderable = [
          '#theme' => 'games_collection_warning',
          '#title' => 'Error Message',
          '#message' => 'Please remove the game from the following Games collections and from its translations:',
          '#items' => $links
        ];

        $rendered = \Drupal::service('renderer')->render($renderable);
        $form['description']['#markup'] = $rendered;
        $form['actions']['submit']['#attributes']['disabled']  = 'disabled';
      }
  }
}

function games_collection_theme() {
  return [
    'games_collection_warning' => [
      'variables' => [
        'title' => null,
        'message' => null,
        'items' => []
      ]
    ]
  ];
}

function games_collection_page_attachments(array &$page) {
  $page['#attached']['library'][] = 'games_collection/games_collection';
}