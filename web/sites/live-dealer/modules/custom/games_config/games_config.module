<?php

/**
 * @file
 * Contains games_config.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\taxonomy\Entity\Term;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function games_config_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the games_config module.
    case 'help.page.games_config':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Games Config Module') . '</p>';
      return $output;

    default:
  }
}


function games_config_form_alter(&$form, $form_state, $form_id) {
    $submitAction = false;
    switch($form_id) {
        case 'taxonomy_term_game_subprovider_form':
          $submitAction = 'games_config_subprovider_form_submit';
          break;
    }
    if ($submitAction !== false) {
        foreach (array_keys($form['actions']) as $action) {
            if ($action != 'preview' && isset($form['actions'][$action]['#type']) && 
                $form['actions'][$action]['#type'] === 'submit') {
                $form['actions'][$action]['#submit'][] = $submitAction;
            }
        }
    }
}

function games_config_subprovider_form_submit($form, &$form_state) {
  $request = \Drupal::request();
  $current_path = $request->getPathInfo();
  $path_args = explode('/', $current_path);
  $tid = $path_args[4] ?? null;

  if ($tid) {
    $nodes = _get_nodes_by_term($tid);
    $tags = array_map(function ($node) {
      return "node:{$node->nid}";
    }, $nodes);

    if ($tags) {
      \Drupal\Core\Cache\Cache::invalidateTags($tags);
    }
  }
}

function _get_nodes_by_term($term_id) {
  $query = \Drupal::database()->select('taxonomy_index', 'ti');
  $query->fields('ti', ['nid']);
  $query->condition('ti.tid', $term_id);
  $nodes = $query->execute()->fetchAll();
  return $nodes;
}
