<?php

use \Drupal\Core\Form\FormStateInterface;
use \Drupal\Core\Render\Markup;

/**
 * Implements hook_module_implements_alter()
 */
function casino_config_module_implements_alter(&$implementations, $hook)
{
    if ($hook == 'form_alter')
    {
      // Move the casino editor as last module to override
      // the form alter from the scheduler.
      $group = $implementations['casino_config'];
      unset($implementations['casino_config']);
      $implementations['casino_config'] = $group;
    }
}

function casino_config_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $alterFormInfos = array(
    array(
      'formID' => 'block_content_sponsorship_block_form',
      'blockType' => 'sponsorship_block',
      'submitHandler' => 'block_content_sponsor_block_form_submit'
    ),
    array(
      'formID' => 'block_content_social_media_block_form',
      'blockType' => 'social_media_block',
      'submitHandler' => 'block_content_social_media_block_form_submit'
    ),
  );
  foreach($alterFormInfos as $formKey => $formValue) {
    if ($form_id == $formValue['formID']) {
      $isSponsorBlockExist = checkCustomBlockIfExist($formValue['blockType']);
      $isTranslationForm = false;
      if ($isSponsorBlockExist > 0) {
        foreach ($form['#cache']['tags'] as $key => $value) {
          $explodeValue = explode(':', $value);
          if ( is_numeric($explodeValue[1]) ){
            $isTranslationForm = true;
          }
        }
        if ( !$isTranslationForm ) {
          unset($form['actions']['submit']['#submit']);
          $form['actions']['submit']['#submit'][] = $formValue['submitHandler'];
        }
      }
    }
  }
  // remove access to content translation field
  $form['content_translation']['#access'] = false;
  // hide the description on publish/unpublish from scheduler module
  unset($form['unpublish_on']['widget'][0]['value']['#description']);
  unset($form['publish_on']['widget'][0]['value']['#description']);
}

/**
 * submit handler for block_content_social_media_block_form
 */
function block_content_social_media_block_form_submit(&$form, FormStateInterface $form_state) {
  $message = "Sorry, a Social Media block is already existing. Please contact the administrator if another Social Media block is required.";
  drupal_set_message(Markup::create($message), 'error');
}

/**
 * submit handler for block_content_sponsorship_block_form
 */
function block_content_sponsor_block_form_submit(&$form, FormStateInterface $form_state) {
  $message = "Sorry, Sponsorship block is already existing. Please contact the administrator if another Sponsorship block is required.";
  drupal_set_message(Markup::create($message), 'error');
}


function checkCustomBlockIfExist($block_type) {
  $blockCounter = 0;
  $blockDefinitions = \Drupal::service('plugin.manager.block')->getDefinitions();
  foreach ( $blockDefinitions as $blockKey => $blockValue ) {
    if ($blockValue['id'] == 'block_content' ) {
      $explodedBlockKey = explode(':', $blockKey);

      $block_content = \Drupal::service('entity.repository')->loadEntityByUuid('block_content', $explodedBlockKey[1]);

      if($block_content->type->target_id == $block_type) {
        $blockCounter += 1;
      }
    }
  }
  return $blockCounter;
}
